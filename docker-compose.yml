services:
  # Commercify API Backend
  commercify-api:
    image: ghcr.io/zenfulcode/commercifygo:v0.0.5-beta
    ports:
      - '6091:6091'
    environment:
      # Server Configuration
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:3000}

      # Database Configuration
      - DB_DRIVER=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=commercify
      - DB_USER=commercify
      - DB_PASSWORD=commercify123

      # Authentication
      - AUTH_JWT_SECRET=${AUTH_JWT_SECRET:-your-jwt-secret-key-change-in-production}

      # Email Configuration
      - EMAIL_ENABLED=${EMAIL_ENABLED:-false}
      - EMAIL_SMTP_HOST=${EMAIL_SMTP_HOST:-}
      - EMAIL_SMTP_PORT=${EMAIL_SMTP_PORT:-587}
      - EMAIL_SMTP_USERNAME=${EMAIL_SMTP_USERNAME:-}
      - EMAIL_SMTP_PASSWORD=${EMAIL_SMTP_PASSWORD:-}
      - EMAIL_FROM_ADDRESS=${EMAIL_FROM_ADDRESS:-}
      - EMAIL_FROM_NAME=${EMAIL_FROM_NAME:-Commercify}
      - EMAIL_ADMIN_ADDRESS=${EMAIL_ADMIN_ADDRESS:-dev@zenfulcode.com}

      # Stripe Configuration
      - STRIPE_ENABLED=${STRIPE_ENABLED:-false}
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY:-}
      - STRIPE_PUBLIC_KEY=${STRIPE_PUBLIC_KEY:-}
      - STRIPE_WEBHOOK_SECRET=${STRIPE_WEBHOOK_SECRET:-}
      - STRIPE_PAYMENT_DESCRIPTION=${STRIPE_PAYMENT_DESCRIPTION:-Commercify Store Purchase}

      # MobilePay Configuration
      - MOBILEPAY_ENABLED=${MOBILEPAY_ENABLED:-false}
      - MOBILEPAY_TEST_MODE=${MOBILEPAY_TEST_MODE:-true}
      - MOBILEPAY_MERCHANT_SERIAL_NUMBER=${MOBILEPAY_MERCHANT_SERIAL_NUMBER:-}
      - MOBILEPAY_SUBSCRIPTION_KEY=${MOBILEPAY_SUBSCRIPTION_KEY:-}
      - MOBILEPAY_CLIENT_ID=${MOBILEPAY_CLIENT_ID:-}
      - MOBILEPAY_CLIENT_SECRET=${MOBILEPAY_CLIENT_SECRET:-}
      - MOBILEPAY_WEBHOOK_URL=${MOBILEPAY_WEBHOOK_URL:-}
      - MOBILEPAY_PAYMENT_DESCRIPTION=${MOBILEPAY_PAYMENT_DESCRIPTION:-Commercify Store Purchase}''

      # Return URL
      - RETURN_URL=${RETURN_URL:-http://localhost:3000/payment/complete}
      - DEFAULT_CURRENCY=${DEFAULT_CURRENCY:-USD}
    depends_on:
      - postgres
    restart: unless-stopped
    healthcheck:
      test: ['CMD', 'wget', '--no-verbose', '--tries=1', '--spider', 'http://localhost:6091/health']
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - commercify-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    ports:
      - '5432:5432'
    environment:
      - POSTGRES_DB=commercify
      - POSTGRES_USER=commercify
      - POSTGRES_PASSWORD=commercify123
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U commercify -d commercify']
      interval: 60s
      timeout: 10s
      retries: 3
    networks:
      - commercify-network

  # Frontend Application
  commercify-app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - PORT=3000
      - HOST=0.0.0.0
      - API_BASE_URL_DEV=http://commercify-api
      - API_BASE_URL_PROD=http://commercify-api
    depends_on:
      - commercify-api
    restart: unless-stopped
    networks:
      - commercify-network

volumes:
  postgres_data:

networks:
  commercify-network:
    driver: bridge
